{
    "pipes": [],
    "interfaces": [
        {
            "name": "Accent",
            "id": "interface-Accent-10f9e17cdbd5dd94c0057ada44417f03",
            "file": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {Theme} from \"./theme\";\nimport {ThemeService} from \"../../theme.service\";\n\n\n@Component({\n  selector: 'theme-thumbnail',\n  templateUrl: './theme-thumbnail.component.html',\n  styleUrls: ['./theme-thumbnail.component.scss']\n})\nexport class ThemeThumbnailComponent implements OnInit {\n  themeModel: ThemeModel | undefined;\n  subThemeModel: ThemeModel | undefined;\n\n  constructor(private themeService: ThemeService) {\n  }\n\n  @Input()\n  theme: Theme = new Theme;\n\n  ngOnInit(): void {\n    const models = this.themeService.getThemeModels(this.theme);\n    this.themeModel = models.themeModel;\n    this.subThemeModel = models.subThemeModel;\n  }\n}\n\nexport interface Primary {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Accent {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Warn {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Palette {\n  primary: Primary;\n  accent: Accent;\n  warn: Warn;\n  lightText: string;\n  lightBackground: string;\n  darkText: string;\n  darkBackground: string;\n}\n\nexport interface Font {\n  target: string;\n  size?: any;\n}\n\nexport interface ThemeModel {\n  palette: Palette;\n  fonts: Font[];\n  icons: string;\n  lightness: boolean;\n}\n",
            "properties": [
                {
                    "name": "darker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "lighter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "main",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Font",
            "id": "interface-Font-10f9e17cdbd5dd94c0057ada44417f03",
            "file": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {Theme} from \"./theme\";\nimport {ThemeService} from \"../../theme.service\";\n\n\n@Component({\n  selector: 'theme-thumbnail',\n  templateUrl: './theme-thumbnail.component.html',\n  styleUrls: ['./theme-thumbnail.component.scss']\n})\nexport class ThemeThumbnailComponent implements OnInit {\n  themeModel: ThemeModel | undefined;\n  subThemeModel: ThemeModel | undefined;\n\n  constructor(private themeService: ThemeService) {\n  }\n\n  @Input()\n  theme: Theme = new Theme;\n\n  ngOnInit(): void {\n    const models = this.themeService.getThemeModels(this.theme);\n    this.themeModel = models.themeModel;\n    this.subThemeModel = models.subThemeModel;\n  }\n}\n\nexport interface Primary {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Accent {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Warn {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Palette {\n  primary: Primary;\n  accent: Accent;\n  warn: Warn;\n  lightText: string;\n  lightBackground: string;\n  darkText: string;\n  darkBackground: string;\n}\n\nexport interface Font {\n  target: string;\n  size?: any;\n}\n\nexport interface ThemeModel {\n  palette: Palette;\n  fonts: Font[];\n  icons: string;\n  lightness: boolean;\n}\n",
            "properties": [
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IMenuItem",
            "id": "interface-IMenuItem-068123a554e027a749a1132013878ec8",
            "file": "projects/theme-controller/src/app/menu/IMenuItem.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IMenuItem {\r\n  title: string;\r\n  icon?: string;\r\n  path: string;\r\n  children: IMenuItem[]\r\n}\r\n",
            "properties": [
                {
                    "name": "children",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IMenuItem[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Palette",
            "id": "interface-Palette-10f9e17cdbd5dd94c0057ada44417f03",
            "file": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {Theme} from \"./theme\";\nimport {ThemeService} from \"../../theme.service\";\n\n\n@Component({\n  selector: 'theme-thumbnail',\n  templateUrl: './theme-thumbnail.component.html',\n  styleUrls: ['./theme-thumbnail.component.scss']\n})\nexport class ThemeThumbnailComponent implements OnInit {\n  themeModel: ThemeModel | undefined;\n  subThemeModel: ThemeModel | undefined;\n\n  constructor(private themeService: ThemeService) {\n  }\n\n  @Input()\n  theme: Theme = new Theme;\n\n  ngOnInit(): void {\n    const models = this.themeService.getThemeModels(this.theme);\n    this.themeModel = models.themeModel;\n    this.subThemeModel = models.subThemeModel;\n  }\n}\n\nexport interface Primary {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Accent {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Warn {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Palette {\n  primary: Primary;\n  accent: Accent;\n  warn: Warn;\n  lightText: string;\n  lightBackground: string;\n  darkText: string;\n  darkBackground: string;\n}\n\nexport interface Font {\n  target: string;\n  size?: any;\n}\n\nexport interface ThemeModel {\n  palette: Palette;\n  fonts: Font[];\n  icons: string;\n  lightness: boolean;\n}\n",
            "properties": [
                {
                    "name": "accent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Accent",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "darkBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "darkText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "lightBackground",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "lightText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "primary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Primary",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "warn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Warn",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Primary",
            "id": "interface-Primary-10f9e17cdbd5dd94c0057ada44417f03",
            "file": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {Theme} from \"./theme\";\nimport {ThemeService} from \"../../theme.service\";\n\n\n@Component({\n  selector: 'theme-thumbnail',\n  templateUrl: './theme-thumbnail.component.html',\n  styleUrls: ['./theme-thumbnail.component.scss']\n})\nexport class ThemeThumbnailComponent implements OnInit {\n  themeModel: ThemeModel | undefined;\n  subThemeModel: ThemeModel | undefined;\n\n  constructor(private themeService: ThemeService) {\n  }\n\n  @Input()\n  theme: Theme = new Theme;\n\n  ngOnInit(): void {\n    const models = this.themeService.getThemeModels(this.theme);\n    this.themeModel = models.themeModel;\n    this.subThemeModel = models.subThemeModel;\n  }\n}\n\nexport interface Primary {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Accent {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Warn {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Palette {\n  primary: Primary;\n  accent: Accent;\n  warn: Warn;\n  lightText: string;\n  lightBackground: string;\n  darkText: string;\n  darkBackground: string;\n}\n\nexport interface Font {\n  target: string;\n  size?: any;\n}\n\nexport interface ThemeModel {\n  palette: Palette;\n  fonts: Font[];\n  icons: string;\n  lightness: boolean;\n}\n",
            "properties": [
                {
                    "name": "darker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "lighter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "main",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "ThemeModel",
            "id": "interface-ThemeModel-10f9e17cdbd5dd94c0057ada44417f03",
            "file": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {Theme} from \"./theme\";\nimport {ThemeService} from \"../../theme.service\";\n\n\n@Component({\n  selector: 'theme-thumbnail',\n  templateUrl: './theme-thumbnail.component.html',\n  styleUrls: ['./theme-thumbnail.component.scss']\n})\nexport class ThemeThumbnailComponent implements OnInit {\n  themeModel: ThemeModel | undefined;\n  subThemeModel: ThemeModel | undefined;\n\n  constructor(private themeService: ThemeService) {\n  }\n\n  @Input()\n  theme: Theme = new Theme;\n\n  ngOnInit(): void {\n    const models = this.themeService.getThemeModels(this.theme);\n    this.themeModel = models.themeModel;\n    this.subThemeModel = models.subThemeModel;\n  }\n}\n\nexport interface Primary {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Accent {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Warn {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Palette {\n  primary: Primary;\n  accent: Accent;\n  warn: Warn;\n  lightText: string;\n  lightBackground: string;\n  darkText: string;\n  darkBackground: string;\n}\n\nexport interface Font {\n  target: string;\n  size?: any;\n}\n\nexport interface ThemeModel {\n  palette: Palette;\n  fonts: Font[];\n  icons: string;\n  lightness: boolean;\n}\n",
            "properties": [
                {
                    "name": "fonts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Font[]",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "icons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "lightness",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "palette",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Palette",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "Warn",
            "id": "interface-Warn-10f9e17cdbd5dd94c0057ada44417f03",
            "file": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {Theme} from \"./theme\";\nimport {ThemeService} from \"../../theme.service\";\n\n\n@Component({\n  selector: 'theme-thumbnail',\n  templateUrl: './theme-thumbnail.component.html',\n  styleUrls: ['./theme-thumbnail.component.scss']\n})\nexport class ThemeThumbnailComponent implements OnInit {\n  themeModel: ThemeModel | undefined;\n  subThemeModel: ThemeModel | undefined;\n\n  constructor(private themeService: ThemeService) {\n  }\n\n  @Input()\n  theme: Theme = new Theme;\n\n  ngOnInit(): void {\n    const models = this.themeService.getThemeModels(this.theme);\n    this.themeModel = models.themeModel;\n    this.subThemeModel = models.subThemeModel;\n  }\n}\n\nexport interface Primary {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Accent {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Warn {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Palette {\n  primary: Primary;\n  accent: Accent;\n  warn: Warn;\n  lightText: string;\n  lightBackground: string;\n  darkText: string;\n  darkBackground: string;\n}\n\nexport interface Font {\n  target: string;\n  size?: any;\n}\n\nexport interface ThemeModel {\n  palette: Palette;\n  fonts: Font[];\n  icons: string;\n  lightness: boolean;\n}\n",
            "properties": [
                {
                    "name": "darker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "lighter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "main",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "ThemeService",
            "id": "injectable-ThemeService-66a229b68bd23b8b78e84d533abf3773",
            "file": "projects/theme-controller/src/app/theme.service.ts",
            "properties": [
                {
                    "name": "darkMode$",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "selectedTheme$",
                    "defaultValue": "new BehaviorSubject<Theme>(null as any)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "subThemeModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeModel | undefined",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "themeModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeModel | undefined",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methods": [
                {
                    "name": "fromExternal",
                    "args": [
                        {
                            "name": "context",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ThemeModel",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "context",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getParam",
                    "args": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "param",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "link",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "param",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getThemeModels",
                    "args": [
                        {
                            "name": "theme",
                            "type": "Theme",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "Theme",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {ThemeModel} from \"./layout/theme-thumbnail/theme-thumbnail.component\";\nimport {Theme} from \"./layout/theme-thumbnail/theme\";\nimport {BehaviorSubject} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  themeModel: ThemeModel | undefined;\n  subThemeModel: ThemeModel | undefined;\n  selectedTheme$ = new BehaviorSubject<Theme>(null as any);\n  darkMode$ = new BehaviorSubject<boolean>(false);\n\n  constructor() { }\n\n  private static getParam(link: string, param: string): string | null {\n    const url = new URL(link);\n    const urlParams = new URLSearchParams(url.search);\n    return urlParams.get(param);\n  }\n\n  getThemeModels(theme: Theme): { subThemeModel: ThemeModel | undefined; themeModel: ThemeModel } {\n    const themeBase64 = ThemeService.getParam(theme.link as string, 'c') as string;\n    this.themeModel = this.fromExternal(themeBase64) as ThemeModel;\n    if(theme.subThemeLink) {\n      const subThemeBase64 = ThemeService.getParam(theme.subThemeLink as string, 'c') as string;\n      this.subThemeModel = this.fromExternal(subThemeBase64) as ThemeModel;\n    }\n    return {\n      themeModel: this.themeModel,\n      subThemeModel: this.subThemeModel\n    }\n  }\n  fromExternal(context: string): ThemeModel {\n    const text = atob(context.replace(/[$]/g, '+').replace(/~/g, '\\/'))\n      .replace(/&(.)(.)(.)/g, (a, r: string, g: string, b: string) => {\n        return `#${[r, g, b].map(x => x.charCodeAt(0).toString(16).padStart(2, '0')).join('')}`;\n      })\n      .replace(/@/g, 'target')\n      .replace(/[\\^]/g, 'main')\n      .replace(/%/g, 'accent')\n      .replace(/[(]/g, 'display')\n      .replace(/[)]/g, 'heading')\n      .replace(/;/g, 'dark')\n      .replace(/[?]/g, 'light')\n      .replace(/=/g, 'Background')\n      .replace(/</g, '\":\"')\n      .replace(/>/g, '\":')\n      .replace(/`/g, '{\"')\n      .replace(/~/g, '\"}');\n\n    return JSON.parse(text);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "Theme",
            "id": "class-Theme-3c51d671c3697a144d22f628fdad61c8",
            "file": "projects/theme-controller/src/app/layout/theme-thumbnail/theme.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Theme {\r\n    name: string = '';\r\n    className: string = '';\r\n    link: string = '';\r\n    subThemeLink: string = '';\r\n    colors = ['', 'primary', 'accent', 'warn']\r\n}\r\n",
            "properties": [
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "colors",
                    "defaultValue": "['', 'primary', 'accent', 'warn']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "link",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "subThemeLink",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-da737f7912cae03f8496977abf2f3ade",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isIconMenu",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "menu",
                    "defaultValue": "[\n    {\n      icon: 'account_box',\n      title: 'Menu Item One',\n      path: 'main',\n      children: [{\n        title: 'Sub Menu Item One',\n        path: 'level-2',\n        children: [{\n          title: 'Sub Menu Item One',\n          path: 'level-3',\n          children: [{\n            title: 'Sub Menu Item One',\n            path: 'level-4/1',\n          }, {\n            title: 'Sub Menu Item Two',\n            path: 'level-4/2',\n          }] as IMenuItem[],\n        }, {\n          title: 'Sub Menu Item Two',\n          path: 'level-3/2',\n        }] as IMenuItem[],\n      }, {\n        title: 'Sub Menu Item Two',\n        path: 'level-2/1',\n      }] as IMenuItem[]\n    }, {\n      icon: 'android',\n      title: 'Menu Item Two',\n      path: 'two',\n      children: [{\n        title: 'Sub Menu Item One',\n        path: 'level-2/1',\n      }, {\n        title: 'Sub Menu Item Two',\n        path: 'level-2/2',\n      }] as IMenuItem[]\n    }, {\n      icon: 'android',\n      title: 'Menu Item Three',\n      path: 'three',\n      children: [{\n        title: 'Sub Menu Item One',\n        path: 'level-2/1',\n      }, {\n        title: 'Sub Menu Item Two',\n        path: 'level-2/2',\n      }] as IMenuItem[]\n    }\n  ] as IMenuItem[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "menuIsOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "themes",
                    "defaultValue": "[\n    {\n      name: 'default',\n      className: 'default-theme',\n      colors: ['', 'primary', 'secondary', 'accent', 'warn'],\n      link: 'https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48IzMzODVjYyIsIj9lcjwjYzJkYWYwIiwiO2VyPCMyMDY4Yjl$LCIlPmBePCM3YWJkZDYiLCI~ZXI8I2Q3ZWJmMyIsIjtlcjwjNWRhNmM2fiwid2Fybj5gXjwjZmYwMDAwIiwiP2VyPCNmZmIzYjMiLCI7ZXI8I2ZmMDAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmFmYWZhIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMyYzJjMmN$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz50cnVlLCJ2ZXJzaW9uPjEyfQ==',\n      subThemeLink: 'https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48I2EwYjJjMiIsIj9lcjwjZTNlOGVkIiwiO2VyPCM4NDk5YWN$LCIlPmBePCNkNWQ3ZDgiLCI~ZXI8I2YyZjNmMyIsIjtlcjwjYzRjN2M4fiwid2Fybj5gXjwjZmYwMDAwIiwiP2VyPCNmZmIzYjMiLCI7ZXI8I2ZmMDAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmFmYWZhIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMyYzJjMmN$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz50cnVlfQ=='\n    },\n    {\n      name: 'secondary',\n      className: 'secondary-theme',\n      colors: ['', 'primary', 'accent', 'warn'],\n      link: 'https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48I2JhOGIyOSIsIj9lcjwjZWFkY2JmIiwiO2VyPCNhMzZlMTl$LCIlPmBePCNlNGU0ZTQiLCI~ZXI8I2Y3ZjdmNyIsIjtlcjwjZDlkOWQ5fiwid2Fybj5gXjwjZmY0ODAwIiwiP2VyPCNmZmM4YjMiLCI7ZXI8I2ZmMzAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmZmYWVmIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMzYjM1MmF$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz50cnVlLCJ2ZXJzaW9uPjEyfQ==',\n      subThemeLink: 'https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48IzM4OWI0NyIsIj9lcjwjYzNlMWM4IiwiO2VyPCMyNDdmMmZ$LCIlPmBePCNkMGNmY2YiLCI~ZXI8I2YxZjFmMSIsIjtlcjwjYmViZGJkfiwid2Fybj5gXjwjZmY0ODAwIiwiP2VyPCNmZmM4YjMiLCI7ZXI8I2ZmMzAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZjdlOWNkIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMzYjM1MmF$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz50cnVlLCJ2ZXJzaW9uPjEyfQ=='\n    },\n    {\n      name: 'purple',\n      className: 'purple',\n      colors: ['', 'primary', 'accent', 'warn'],\n      link: 'https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48IzcxM2ZjZSIsIj9lcjwjZDRjNWYwIiwiO2VyPCM1NDI5YmN$LCIlPmBePCNiMTIxZTIiLCI~ZXI8I2U4YmNmNiIsIjtlcjwjOTgxNGQ2fiwid2Fybj5gXjwjZmYwMDAwIiwiP2VyPCNmZmIzYjMiLCI7ZXI8I2ZmMDAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmFmYWZhIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMyYzJjMmN$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz50cnVlLCJ2ZXJzaW9uPjEyfQ=='\n    }\n  ] as Theme[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "menuToggle",
                    "args": [
                        {
                            "name": "isOpen",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isOpen",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnDestroy, OnInit,} from '@angular/core';\nimport {IMenuItem} from \"../../projects/theme-controller/src/app/menu/IMenuItem\";\nimport {Theme} from \"../../projects/theme-controller/src/app/layout/theme-thumbnail/theme\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  menuIsOpen: boolean = false;\n  isIconMenu = true;\n  menu = [\n    {\n      icon: 'account_box',\n      title: 'Menu Item One',\n      path: 'main',\n      children: [{\n        title: 'Sub Menu Item One',\n        path: 'level-2',\n        children: [{\n          title: 'Sub Menu Item One',\n          path: 'level-3',\n          children: [{\n            title: 'Sub Menu Item One',\n            path: 'level-4/1',\n          }, {\n            title: 'Sub Menu Item Two',\n            path: 'level-4/2',\n          }] as IMenuItem[],\n        }, {\n          title: 'Sub Menu Item Two',\n          path: 'level-3/2',\n        }] as IMenuItem[],\n      }, {\n        title: 'Sub Menu Item Two',\n        path: 'level-2/1',\n      }] as IMenuItem[]\n    }, {\n      icon: 'android',\n      title: 'Menu Item Two',\n      path: 'two',\n      children: [{\n        title: 'Sub Menu Item One',\n        path: 'level-2/1',\n      }, {\n        title: 'Sub Menu Item Two',\n        path: 'level-2/2',\n      }] as IMenuItem[]\n    }, {\n      icon: 'android',\n      title: 'Menu Item Three',\n      path: 'three',\n      children: [{\n        title: 'Sub Menu Item One',\n        path: 'level-2/1',\n      }, {\n        title: 'Sub Menu Item Two',\n        path: 'level-2/2',\n      }] as IMenuItem[]\n    }\n  ] as IMenuItem[];\n\n  themes = [\n    {\n      name: 'default',\n      className: 'default-theme',\n      colors: ['', 'primary', 'secondary', 'accent', 'warn'],\n      link: 'https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48IzMzODVjYyIsIj9lcjwjYzJkYWYwIiwiO2VyPCMyMDY4Yjl$LCIlPmBePCM3YWJkZDYiLCI~ZXI8I2Q3ZWJmMyIsIjtlcjwjNWRhNmM2fiwid2Fybj5gXjwjZmYwMDAwIiwiP2VyPCNmZmIzYjMiLCI7ZXI8I2ZmMDAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmFmYWZhIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMyYzJjMmN$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz50cnVlLCJ2ZXJzaW9uPjEyfQ==',\n      subThemeLink: 'https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48I2EwYjJjMiIsIj9lcjwjZTNlOGVkIiwiO2VyPCM4NDk5YWN$LCIlPmBePCNkNWQ3ZDgiLCI~ZXI8I2YyZjNmMyIsIjtlcjwjYzRjN2M4fiwid2Fybj5gXjwjZmYwMDAwIiwiP2VyPCNmZmIzYjMiLCI7ZXI8I2ZmMDAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmFmYWZhIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMyYzJjMmN$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz50cnVlfQ=='\n    },\n    {\n      name: 'secondary',\n      className: 'secondary-theme',\n      colors: ['', 'primary', 'accent', 'warn'],\n      link: 'https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48I2JhOGIyOSIsIj9lcjwjZWFkY2JmIiwiO2VyPCNhMzZlMTl$LCIlPmBePCNlNGU0ZTQiLCI~ZXI8I2Y3ZjdmNyIsIjtlcjwjZDlkOWQ5fiwid2Fybj5gXjwjZmY0ODAwIiwiP2VyPCNmZmM4YjMiLCI7ZXI8I2ZmMzAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmZmYWVmIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMzYjM1MmF$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz50cnVlLCJ2ZXJzaW9uPjEyfQ==',\n      subThemeLink: 'https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48IzM4OWI0NyIsIj9lcjwjYzNlMWM4IiwiO2VyPCMyNDdmMmZ$LCIlPmBePCNkMGNmY2YiLCI~ZXI8I2YxZjFmMSIsIjtlcjwjYmViZGJkfiwid2Fybj5gXjwjZmY0ODAwIiwiP2VyPCNmZmM4YjMiLCI7ZXI8I2ZmMzAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZjdlOWNkIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMzYjM1MmF$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz50cnVlLCJ2ZXJzaW9uPjEyfQ=='\n    },\n    {\n      name: 'purple',\n      className: 'purple',\n      colors: ['', 'primary', 'accent', 'warn'],\n      link: 'https://materialtheme.arcsine.dev/?c=YHBhbGV0dGU$YHByaW1hcnk$YF48IzcxM2ZjZSIsIj9lcjwjZDRjNWYwIiwiO2VyPCM1NDI5YmN$LCIlPmBePCNiMTIxZTIiLCI~ZXI8I2U4YmNmNiIsIjtlcjwjOTgxNGQ2fiwid2Fybj5gXjwjZmYwMDAwIiwiP2VyPCNmZmIzYjMiLCI7ZXI8I2ZmMDAwMH4sIj9UZXh0PCMwMDAwMDAiLCI~PTwjZmFmYWZhIiwiO1RleHQ8I2ZmZmZmZiIsIjs9PCMyYzJjMmN$LCJmb250cz5bYEA8KC00fixgQDwoLTN$LGBAPCgtMn4sYEA8KC0xfixgQDxoZWFkbGluZX4sYEA8dGl0bGV$LGBAPHN1YiktMn4sYEA8c3ViKS0xfixgQDxib2R5LTJ$LGBAPGJvZHktMX4sYEA8YnV0dG9ufixgQDxjYXB0aW9ufixgQDxpbnB1dCIsInNpemU$bnVsbH1dLCJpY29uczxGaWxsZWQiLCI~bmVzcz50cnVlLCJ2ZXJzaW9uPjEyfQ=='\n    }\n  ] as Theme[];\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  menuToggle(isOpen: boolean) {\n    this.menuIsOpen = isOpen;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host{\r\n  display: block;\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 85
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<theme-layout\n    [themes]=\"themes\"\n    [isIconMenu]=\"isIconMenu\"\n    (menuToggle)=\"menuToggle($event)\"\n    [isMenuOpen]=\"menuIsOpen\"\n    menuLayout=\"side\">\n  <div leftHeader>\n    <button mat-button>Hello</button>\n  </div>\n  <div rightHeader>\n    <button mat-button>GoodBye</button>\n  </div>\n  <div menu>\n    <theme-menu [isIconMenu]=\"isIconMenu\" [isOpen]=\"menuIsOpen\" [menu]=\"menu\" ></theme-menu>\n  </div>\n  <div profileMenu>\n      <a mat-menu-item routerLink=\"/login\">Login</a>\n  </div>\n  <router-outlet></router-outlet>\n  <div footer>this is a footer</div>\n</theme-layout>\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d91aba015f255dd8d645f0e55f72364a-1",
            "file": "projects/main/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"primary\" | \"accent\" | \"warn\" | null",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "selectedTheme",
                    "defaultValue": "null as any as Theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Theme",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "defaultValue": "'main'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {Theme} from \"../../../theme-controller/src/app/layout/theme-thumbnail/theme\";\nimport {ThemeService} from \"../../../theme-controller/src/app/theme.service\";\n\n@Component({\n  selector: 'app-main-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'main';\n  color: 'primary' | 'accent' | 'warn' | null = 'primary';\n  selectedTheme: Theme = null as any as Theme;\n  constructor(private themeService: ThemeService) {\n    this.themeService.selectedTheme$.subscribe(theme => this.selectedTheme = theme);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AppComponent-1",
            "templateData": "<mat-card class=\"mat-elevation-z3\">\n  <mat-toolbar color=\"primary\">\n    <button mat-button>This ia a button</button>\n  </mat-toolbar>\n  <mat-toolbar color=\"accent\">\n    <button mat-button>This ia a button</button>\n  </mat-toolbar>\n  <mat-form-field>\n    <mat-label>Select a color</mat-label>\n    <mat-select style=\"text-transform: capitalize\" [(ngModel)]=\"color\" placeholder=\"Color\">\n      <mat-option style=\"text-transform: capitalize\" *ngFor=\"let color of selectedTheme.colors\" [value]=\"color\">{{color}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <app-widget [color]=\"color\"></app-widget>\n  <h1>Qui igitur convenit ab alia voluptate dicere naturam proficisci, in alia summum bonum ponere?</h1>\n\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sedulo, inquam, faciam. Teneo, inquit, finem illi videri\n    nihil dolere. Cur igitur, inquam, res tam dissimiles eodem nomine appellas? Duo Reges: constructio interrete. </p>\n\n  <p>Videamus animi partes, quarum est conspectus illustrior; Compensabatur, inquit, cum summis doloribus laetitia. Id\n    enim natura desiderat. Occultum facinus esse potuerit, gaudebit; In schola desinis. Dat enim intervalla et\n    relaxat. </p>\n\n  <p>Quamquam te quidem video minime esse deterritum. Quis istud, quaeso, nesciebat? Sed virtutem ipsam inchoavit, nihil\n    amplius. Nobis aliter videtur, recte secusne, postea; Istam voluptatem, inquit, Epicurus ignorat? </p>\n\n  <h2>Quo modo autem philosophus loquitur?</h2>\n\n  <p>Laboro autem non sine causa; Occultum facinus esse potuerit, gaudebit; Certe, nisi voluptatem tanti aestimaretis.\n    Peccata paria. Quare attende, quaeso. Quam si explicavisset, non tam haesitaret. Vide, quantum, inquam, fallare,\n    Torquate. Quid enim possumus hoc agere divinius? </p>\n  <h2>Quo modo autem philosophus loquitur?</h2>\n\n  <h1>Qui igitur convenit ab alia voluptate dicere naturam proficisci, in alia summum bonum ponere?</h1>\n\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sedulo, inquam, faciam. Teneo, inquit, finem illi videri\n    nihil dolere. Cur igitur, inquam, res tam dissimiles eodem nomine appellas? Duo Reges: constructio interrete. </p>\n\n  <p>Videamus animi partes, quarum est conspectus illustrior; Compensabatur, inquit, cum summis doloribus laetitia. Id\n    enim natura desiderat. Occultum facinus esse potuerit, gaudebit; In schola desinis. Dat enim intervalla et\n    relaxat. </p>\n\n  <p>Quamquam te quidem video minime esse deterritum. Quis istud, quaeso, nesciebat? Sed virtutem ipsam inchoavit, nihil\n    amplius. Nobis aliter videtur, recte secusne, postea; Istam voluptatem, inquit, Epicurus ignorat? </p>\n\n  <h2>Quo modo autem philosophus loquitur?</h2>\n\n  <p>Laboro autem non sine causa; Occultum facinus esse potuerit, gaudebit; Certe, nisi voluptatem tanti aestimaretis.\n    Peccata paria. Quare attende, quaeso. Quam si explicavisset, non tam haesitaret. Vide, quantum, inquam, fallare,\n    Torquate. Quid enim possumus hoc agere divinius? </p>\n  <h2>Quo modo autem philosophus loquitur?</h2>\n\n  <h1>Qui igitur convenit ab alia voluptate dicere naturam proficisci, in alia summum bonum ponere?</h1>\n\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sedulo, inquam, faciam. Teneo, inquit, finem illi videri\n    nihil dolere. Cur igitur, inquam, res tam dissimiles eodem nomine appellas? Duo Reges: constructio interrete. </p>\n\n  <p>Videamus animi partes, quarum est conspectus illustrior; Compensabatur, inquit, cum summis doloribus laetitia. Id\n    enim natura desiderat. Occultum facinus esse potuerit, gaudebit; In schola desinis. Dat enim intervalla et\n    relaxat. </p>\n\n  <p>Quamquam te quidem video minime esse deterritum. Quis istud, quaeso, nesciebat? Sed virtutem ipsam inchoavit, nihil\n    amplius. Nobis aliter videtur, recte secusne, postea; Istam voluptatem, inquit, Epicurus ignorat? </p>\n\n  <h2>Quo modo autem philosophus loquitur?</h2>\n\n  <p>Laboro autem non sine causa; Occultum facinus esse potuerit, gaudebit; Certe, nisi voluptatem tanti aestimaretis.\n    Peccata paria. Quare attende, quaeso. Quam si explicavisset, non tam haesitaret. Vide, quantum, inquam, fallare,\n    Torquate. Quid enim possumus hoc agere divinius? </p>\n  <h2>Quo modo autem philosophus loquitur?</h2>\n\n  <h1>Qui igitur convenit ab alia voluptate dicere naturam proficisci, in alia summum bonum ponere?</h1>\n\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sedulo, inquam, faciam. Teneo, inquit, finem illi videri\n    nihil dolere. Cur igitur, inquam, res tam dissimiles eodem nomine appellas? Duo Reges: constructio interrete. </p>\n\n  <p>Videamus animi partes, quarum est conspectus illustrior; Compensabatur, inquit, cum summis doloribus laetitia. Id\n    enim natura desiderat. Occultum facinus esse potuerit, gaudebit; In schola desinis. Dat enim intervalla et\n    relaxat. </p>\n\n  <p>Quamquam te quidem video minime esse deterritum. Quis istud, quaeso, nesciebat? Sed virtutem ipsam inchoavit, nihil\n    amplius. Nobis aliter videtur, recte secusne, postea; Istam voluptatem, inquit, Epicurus ignorat? </p>\n\n  <h2>Quo modo autem philosophus loquitur?</h2>\n\n  <p>Laboro autem non sine causa; Occultum facinus esse potuerit, gaudebit; Certe, nisi voluptatem tanti aestimaretis.\n    Peccata paria. Quare attende, quaeso. Quam si explicavisset, non tam haesitaret. Vide, quantum, inquam, fallare,\n    Torquate. Quid enim possumus hoc agere divinius? </p>\n  <h2>Quo modo autem philosophus loquitur?</h2>\n\n</mat-card>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 322,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LayoutComponent",
            "id": "component-LayoutComponent-f5fc7cb7f75b529c489529d229d1464a",
            "file": "projects/theme-controller/src/app/layout/layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "theme-layout",
            "styleUrls": [
                "./layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isIconMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean"
                },
                {
                    "name": "isMenuOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean"
                },
                {
                    "name": "menuLayout",
                    "defaultValue": "`side`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "\"side\" | \"push\" | \"over\""
                },
                {
                    "name": "showDarkMode",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "boolean"
                },
                {
                    "name": "showThemes",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean"
                },
                {
                    "name": "themes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "Theme[]"
                }
            ],
            "outputsClass": [
                {
                    "name": "menuToggle",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "darkMode$",
                    "defaultValue": "new BehaviorSubject<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "innerTheme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDivElement>",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'innerTheme'"
                        }
                    ]
                },
                {
                    "name": "opened",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "selectedTheme$",
                    "defaultValue": "new BehaviorSubject<Theme>(this.themes[0])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "sidenavContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<MatDrawer>",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidenavContainer'"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "subscriptions",
                    "defaultValue": "new Subscription()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "clearTheme",
                    "args": [
                        {
                            "name": "value",
                            "type": "Theme",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Theme",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDarkOrDefault",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 110,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "getThemeOrFirst",
                    "args": [],
                    "optional": false,
                    "returnType": "Theme",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "menuToggleOpen",
                    "args": [
                        {
                            "name": "$event",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setTheme",
                    "args": [
                        {
                            "name": "theme",
                            "type": "Theme",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "theme",
                            "type": "Theme",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleDarkMode",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter, Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport {BehaviorSubject, Subscription} from \"rxjs\";\nimport {Theme} from \"./theme-thumbnail/theme\";\nimport {MatDrawer} from \"@angular/material/sidenav\";\nimport {ThemeService} from \"../theme.service\";\n\n@Component({\n  selector: 'theme-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss']\n})\nexport class LayoutComponent implements OnInit, OnDestroy, AfterViewInit{\n  // @ts-ignore\n  @ViewChild('sidenavContainer') private sidenavContainer: ElementRef<MatDrawer>;\n  @Output() menuToggle = new EventEmitter<boolean>();\n  @Input() themes: Theme[] = [];\n  @Input() isIconMenu = false;\n  @Input() showThemes = true;\n  @Input() showDarkMode = true;\n  @Input() isMenuOpen = false;\n  @Input() menuLayout: 'side' | 'push' | 'over' = `side`;\n  // @ts-ignore\n  @ViewChild('innerTheme') innerTheme: ElementRef<HTMLDivElement>;\n  selectedTheme$ = new BehaviorSubject<Theme>(this.themes[0]);\n  darkMode$ = new BehaviorSubject<boolean>(false);\n  set darkMode(value: boolean){\n    sessionStorage.setItem('isDarkMode', value ? 'true' : 'false');\n    this.darkMode$.next(value);\n    this.themeService.darkMode$.next(value);\n  }\n  get darkMode(){\n    return this.darkMode$.getValue();\n  }\n  private subscriptions = new Subscription();\n  opened: boolean = false;\n  constructor(private renderer: Renderer2,\n              private themeService: ThemeService) { }\n\n  ngAfterViewInit(): void {\n    this.opened = this.isMenuOpen;\n    this.selectedTheme$.next(this.getThemeOrFirst());\n    this.darkMode$.next(this.getDarkOrDefault());\n    this.subscriptions.add(this.selectedTheme$.subscribe(theme => {\n      try {\n        this.renderer.addClass(document.body, theme.className);\n      } catch {\n      }\n    }));\n    this.subscriptions.add(this.darkMode$.subscribe(darkMode => {\n      try {\n        if (darkMode) {\n          this.renderer.addClass(document.body, 'theme-alternate');\n          this.renderer.addClass(this.innerTheme.nativeElement, 'theme-alternate');\n        } else {\n          this.renderer.removeClass(document.body, 'theme-alternate');\n          this.renderer.removeClass(this.innerTheme.nativeElement, 'theme-alternate');\n        }\n      } catch {\n      }\n    }));\n  }\n  ngOnInit(): void {\n    this.subscriptions.add(this.selectedTheme$.subscribe(value => {\n      this.themeService.selectedTheme$.next(value)\n    }));\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  setTheme(theme: Theme): void {\n    sessionStorage.setItem('themeName', theme.name);\n    this.clearTheme(this.selectedTheme$.getValue());\n    this.selectedTheme$.next(theme);\n  }\n\n  private clearTheme(value: Theme): void {\n    try {\n      this.renderer.removeClass(document.body, value.className);\n    } catch {}\n  }\n\n  toggleDarkMode(): void {\n    const isDarkMode = this.darkMode$.getValue();\n    sessionStorage.setItem('isDarkMode', isDarkMode ? 'false' : 'true');\n    this.darkMode$.next(!isDarkMode);\n  }\n\n  menuToggleOpen($event: boolean) {\n    this.menuToggle.next($event);\n  }\n\n  private getThemeOrFirst(): Theme {\n    let themeName = sessionStorage.getItem('themeName');\n    if (!themeName) {\n      themeName = 'default';\n    }\n    return this.themes.find(t => t.name === themeName) as Theme;\n  }\n  private getDarkOrDefault(): boolean {\n    return sessionStorage.getItem('isDarkMode') === 'true';\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../../src/sizes\";\r\n$header-height: 64px;\r\n$small-header-height: 57px;\r\n:host {\r\n  display: block;\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n\r\n  .main-container {\r\n    transition: ease-in-out 250ms;\r\n    height: 100%;\r\n  }\r\n\r\n  mat-drawer-content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n\r\n\r\n    .innerTheme {\r\n      padding: 1rem;\r\n    }\r\n\r\n    mat-toolbar {\r\n      min-height: 64px;\r\n      position: sticky;\r\n      top: 0;\r\n      z-index: 1;\r\n    }\r\n\r\n    footer {\r\n      margin: 0;\r\n      padding: 1rem;\r\n      flex: 1 1 auto;\r\n      min-height: 32px;\r\n      line-height: 32px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 45,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy",
                "AfterViewInit"
            ],
            "accessors": {
                "darkMode": {
                    "name": "darkMode",
                    "setSignature": {
                        "name": "darkMode",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 36,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "boolean",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "darkMode",
                        "type": "",
                        "returnType": "",
                        "line": 41
                    }
                }
            },
            "templateData": "<mat-drawer-container class=\"main-container\"\n                      autosize\n                      [class.is-icon-menu]=\"isIconMenu\"\n                      [class.mat-drawer-closed]=\"!sidenavContainer.opened\"\n                      [class.mat-drawer-open]=\"sidenavContainer.opened\">\n  <mat-drawer class=\"mat-secondary\"\n              (openedChange)=\"menuToggleOpen($event)\"\n              #sidenavContainer\n              [mode]=\"menuLayout\"\n              [opened]=\"opened\">\n    <mat-toolbar color=\"primary\">\n      <button mat-button (click)=\"sidenavContainer.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n    </mat-toolbar>\n    <mat-list>\n      <mat-nav-list>\n        <ng-content select=\"[menu]\"></ng-content>\n      </mat-nav-list>\n      <mat-divider></mat-divider>\n    </mat-list>\n  </mat-drawer>\n  <mat-drawer-content class=\"ps\">\n    <mat-toolbar color=\"primary\">\n      <button *ngIf=\"!isIconMenu && !sidenavContainer.opened\" mat-button (click)=\"sidenavContainer.toggle()\">\n        <mat-icon>menu</mat-icon>\n      </button>\n      <ng-content select=\"[leftHeader]\"></ng-content>\n      <div class=\"spacer\"></div>\n      <ng-content select=\"[rightHeader]\"></ng-content>\n      <button mat-button [mat-menu-trigger-for]=\"userMenu\">\n        <mat-icon>person</mat-icon>\n      </button>\n      <mat-menu #userMenu>\n        <ng-container *ngIf=\"themes.length>1 && showThemes\">\n          <button mat-menu-item *ngFor=\"let theme of themes\" [class.active]=\"theme == (selectedTheme$ | async)\"\n                  (click)=\"setTheme(theme)\" style=\"text-transform: capitalize\">\n            <theme-thumbnail [theme]=\"theme\"></theme-thumbnail>\n          </button>\n        </ng-container>\n        <div mat-menu-item *ngIf=\"showDarkMode\">\n          <mat-slide-toggle [(ngModel)]=\"darkMode\">Dark Mode</mat-slide-toggle>\n        </div>\n        <mat-divider *ngIf=\"(themes.length>1 && showThemes) || showDarkMode\"></mat-divider>\n        <ng-content select=\"[profileMenu]\"></ng-content>\n      </mat-menu>\n    </mat-toolbar>\n    <div #innerTheme class=\"innerTheme\">\n      <ng-content></ng-content>\n    </div>\n    <footer class=\"mat-accent\">\n      <ng-content select=\"[footer]\"></ng-content>\n    </footer>\n  </mat-drawer-content>\n</mat-drawer-container>\n"
        },
        {
            "name": "MainComponent",
            "id": "component-MainComponent-d0148860dd2f4ff734b22c3fb40972f3",
            "file": "src/app/components/main/main.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-main",
            "styleUrls": [
                "./main.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./main.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./main.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<router-outlet></router-outlet>\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-d54f69056fcd5b7cf9dad55179566a79",
            "file": "projects/theme-controller/src/app/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "theme-menu",
            "styleUrls": [
                "./menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "basePath",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string"
                },
                {
                    "name": "isIconMenu",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean"
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean"
                },
                {
                    "name": "level",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number"
                },
                {
                    "name": "menu",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "IMenuItem[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {IMenuItem} from \"./IMenuItem\";\n\n@Component({\n  selector: 'theme-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnInit {\n  @Input() isOpen = false;\n  @Input() menu: IMenuItem[]= [];\n  @Input() level = 0;\n  @Input() basePath = '';\n  @Input() isIconMenu = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "::ng-deep {\r\n  .mat-expansion-panel {\r\n    box-shadow: none !important;\r\n    border-radius: 0!important;\r\n    &.mat-expansion-panel-spacing{\r\n      margin: 0;\r\n    }\r\n    .mat-expansion-panel-header {\r\n      padding: 0 24px 0 0 !important;\r\n    }\r\n\r\n    .mat-expansion-panel-body {\r\n      padding: 0 !important;\r\n    }\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"isOpen || !isIconMenu\" [style.padding-left.rem]=\"level == 1? (level * .5) + 2: level * .5\">\n  <mat-accordion class=\"mat-secondary\">\n    <ng-container *ngFor=\"let menuItem of menu\">\n      <a [routerLink]=\"[basePath, menuItem.path]\" mat-menu-item *ngIf=\"!menuItem.children?.length\">\n        <mat-icon *ngIf=\"menuItem.icon\">{{menuItem.icon}}</mat-icon>\n        <span>{{menuItem.title}}</span>\n      </a>\n      <mat-expansion-panel *ngIf=\"menuItem.children?.length\">\n        <mat-expansion-panel-header>\n          <a [routerLink]=\"[basePath, menuItem.path]\" mat-menu-item>\n            <mat-icon *ngIf=\"menuItem.icon\">{{menuItem.icon}}</mat-icon>\n            <span>{{menuItem.title}}</span>\n          </a>\n        </mat-expansion-panel-header>\n        <theme-menu *ngIf=\"menuItem.children?.length\"\n                    [isOpen]=\"isOpen\"\n                    [isIconMenu]=\"isIconMenu\"\n                    [menu]=\"menuItem.children\"\n                    [basePath]=\"basePath + menuItem.path + '/'\"\n                    [level]=\"level + 1\"></theme-menu>\n      </mat-expansion-panel>\n    </ng-container>\n  </mat-accordion>\n</div>\n<div *ngIf=\"!isOpen && isIconMenu\">\n  <ng-container *ngFor=\"let menuItem of menu\">\n    <a [routerLink]=\"[basePath, menuItem.path]\" mat-menu-item *ngIf=\"!menuItem.children?.length\">\n      <mat-icon *ngIf=\"menuItem.icon\">{{menuItem.icon}}</mat-icon>\n    </a>\n    <ng-container *ngIf=\"menuItem.children?.length\">\n      <a [routerLink]=\"[basePath, menuItem.path]\"\n         mat-menu-item\n         [matMenuTriggerFor]=\"subMenu\">\n        <div style=\"display: flex; padding: .75rem 0\">\n          <mat-icon *ngIf=\"menuItem.icon\">{{menuItem.icon}}</mat-icon>\n          <div class=\"spacer\"></div>\n          <mat-icon>keyboard_arrow_right</mat-icon>\n        </div>\n      </a>\n      <mat-menu #subMenu xPosition=\"after\" yPosition=\"below\" [overlapTrigger]=\"true\" class=\"offsetMenu\">\n        <theme-sub-menu [basePath]=\"basePath + menuItem.path + '/'\" [menu]=\"menuItem.children\"></theme-sub-menu>\n      </mat-menu>\n    </ng-container>\n  </ng-container>\n</div>\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "SubMenuComponent",
            "id": "component-SubMenuComponent-8982e1388b9d3567c3c3c0d5a9f086fd",
            "file": "projects/theme-controller/src/app/menu/sub-menu/sub-menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "theme-sub-menu",
            "styleUrls": [
                "./sub-menu.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sub-menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "basePath",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "menu",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "IMenuItem[]"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {IMenuItem} from \"../IMenuItem\";\n\n@Component({\n  selector: 'theme-sub-menu',\n  templateUrl: './sub-menu.component.html',\n  styleUrls: ['./sub-menu.component.scss']\n})\nexport class SubMenuComponent implements OnInit {\n  @Input() menu: IMenuItem[] = []\n  @Input() basePath = ''\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sub-menu.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-container *ngFor=\"let menuItem of menu\">\n  <ng-container *ngIf=\"!menuItem.children?.length\">\n    <a [routerLink]=\"[basePath, menuItem.path]\" mat-menu-item>\n      {{menuItem.title}}\n    </a>\n  </ng-container>\n  <ng-container *ngIf=\"menuItem.children?.length\">\n    <a [routerLink]=\"[basePath, menuItem.path]\"\n       mat-menu-item\n       [matMenuTriggerFor]=\"subMenu\">\n        {{menuItem.title}}\n    </a>\n    <mat-menu #subMenu>\n      <theme-sub-menu [basePath]=\"basePath + menuItem.path + '/'\" [menu]=\"menuItem.children\"></theme-sub-menu>\n    </mat-menu>\n  </ng-container>\n</ng-container>\n"
        },
        {
            "name": "ThemeThumbnailComponent",
            "id": "component-ThemeThumbnailComponent-10f9e17cdbd5dd94c0057ada44417f03",
            "file": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "theme-thumbnail",
            "styleUrls": [
                "./theme-thumbnail.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./theme-thumbnail.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "theme",
                    "defaultValue": "new Theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Theme"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "subThemeModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeModel | undefined",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "themeModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ThemeModel | undefined",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {Theme} from \"./theme\";\nimport {ThemeService} from \"../../theme.service\";\n\n\n@Component({\n  selector: 'theme-thumbnail',\n  templateUrl: './theme-thumbnail.component.html',\n  styleUrls: ['./theme-thumbnail.component.scss']\n})\nexport class ThemeThumbnailComponent implements OnInit {\n  themeModel: ThemeModel | undefined;\n  subThemeModel: ThemeModel | undefined;\n\n  constructor(private themeService: ThemeService) {\n  }\n\n  @Input()\n  theme: Theme = new Theme;\n\n  ngOnInit(): void {\n    const models = this.themeService.getThemeModels(this.theme);\n    this.themeModel = models.themeModel;\n    this.subThemeModel = models.subThemeModel;\n  }\n}\n\nexport interface Primary {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Accent {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Warn {\n  main: string;\n  lighter: string;\n  darker: string;\n}\n\nexport interface Palette {\n  primary: Primary;\n  accent: Accent;\n  warn: Warn;\n  lightText: string;\n  lightBackground: string;\n  darkText: string;\n  darkBackground: string;\n}\n\nexport interface Font {\n  target: string;\n  size?: any;\n}\n\nexport interface ThemeModel {\n  palette: Palette;\n  fonts: Font[];\n  icons: string;\n  lightness: boolean;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$thumb-size: 24px;\r\n.theme-containers {\r\n  display: inline-block;\r\n  height: $thumb-size;\r\n  width: $thumb-size;\r\n  border: 1px solid #cccc;\r\n  box-sizing: border-box;\r\n  vertical-align: middle;\r\n  .theme-primary {\r\n    height: 6px;\r\n  }\r\n  .sub-theme-primary {\r\n    height: 4px;\r\n  }\r\n  .sub-theme-accent {\r\n    height: 4px;\r\n  }\r\n  .theme-accent {\r\n    height: 3px;\r\n  }\r\n\r\n  .theme-background {\r\n    height: $thumb-size - 17px;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./theme-thumbnail.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "themeService",
                        "type": "ThemeService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"theme-containers\">\n  <div class=\"theme-primary\" [style.background-color]=\"themeModel?.palette?.primary?.main\"></div>\n  <div class=\"sub-theme-primary\" [style.background-color]=\"subThemeModel?.palette?.primary?.main\"></div>\n  <div class=\"sub-theme-accent\" [style.background-color]=\"subThemeModel?.palette?.accent?.main\"></div>\n  <div class=\"theme-background\" [style.background-color]=\"themeModel?.palette?.lightBackground\"></div>\n  <div class=\"theme-accent\" [style.background-color]=\"themeModel?.palette?.accent?.main\"></div>\n</div>\n{{theme.name}}\n"
        },
        {
            "name": "WidgetComponent",
            "id": "component-WidgetComponent-95513a984baa6baec8ce7bc891c39a8c",
            "file": "projects/main/src/app/widget/widget.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-widget",
            "styleUrls": [
                "./widget.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./widget.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": ""
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "color$",
                    "defaultValue": "new BehaviorSubject<'primary' | 'accent' | 'warn' | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {ChangeDetectionStrategy, Component, Input, OnInit} from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\n\n@Component({\n  selector: 'app-widget',\n  templateUrl: './widget.component.html',\n  styleUrls: ['./widget.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WidgetComponent implements OnInit {\n  color$ = new BehaviorSubject<'primary' | 'accent' | 'warn' | null>(null);\n  @Input() set color(value: 'primary' | 'accent' | 'warn' | null){\n    this.color$.next(value);\n  }\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./widget.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "color": {
                    "name": "color",
                    "setSignature": {
                        "name": "color",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "\"primary\" | \"accent\" | \"warn\" | null",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 12,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "\"primary\" | \"accent\" | \"warn\" | null",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            },
            "templateData": "<div class=\"mat-{{color$ | async}} mat-elevation-z3\">\n  <header>THis is my header</header>\n  <section>\n    this is my body\n  </section>\n  <footer>\n    this is the footer\n  </footer>\n</div>\n"
        }
    ],
    "modules": [
        {
            "name": "AngularMaterialModule",
            "id": "module-AngularMaterialModule-39c83cc7ff7952f9073c5f73c2943bdb",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/shared/angular-material.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatTableModule} from '@angular/material/table';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatListModule} from '@angular/material/list';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule\n  ],\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n  ]\n})\nexport class AngularMaterialModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-035dffe6b87005f8835a789d0b07b6de",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {AngularMaterialModule} from \"../../projects/shared/angular-material.module\";\nimport {CommonModule} from \"@angular/common\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport { MainComponent } from './components/main/main.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {ThemeControllerModule} from \"../../projects/theme-controller/src/app/theme-controller.module\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n  ],\n  imports: [\n    AngularMaterialModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    CommonModule,\n    FormsModule,\n    ThemeControllerModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "MainComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "id": "module-AppModule-e0bbd56574df22cbdbece6c63075399d-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/main/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {CommonModule} from \"@angular/common\";\nimport {AngularMaterialModule} from \"../../../shared/angular-material.module\";\nimport { WidgetComponent } from './widget/widget.component';\nimport {FormsModule} from \"@angular/forms\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WidgetComponent\n  ],\n    imports: [\n        CommonModule,\n        AppRoutingModule,\n        AngularMaterialModule,\n        FormsModule\n    ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "WidgetComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        },
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-f113e46c04586c8616dcf23bada38930",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MainComponent} from './components/main/main.component';\n\nconst routes: Routes = [{\n  path: 'main',\n  component: MainComponent,\n  loadChildren: () => \"import('projects/main/src/app/app.module').then(m => m.AppModule)\",\n}, {\n  path: '**',\n  redirectTo: 'main'\n}];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-d0df1399d2fd749acf400bb840e75f0c-1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/main/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {AppComponent} from \"./app.component\";\n\nconst routes: Routes = [{\n  path: '',\n  component: AppComponent\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ThemeControllerModule",
            "id": "module-ThemeControllerModule-01287938cb119f3dedfeb0da96d5ae80",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/theme-controller/src/app/theme-controller.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport {LayoutComponent} from \"./layout/layout.component\";\nimport {MenuComponent} from \"./menu/menu.component\";\nimport {SubMenuComponent} from \"./menu/sub-menu/sub-menu.component\";\nimport {ThemeThumbnailComponent} from \"./layout/theme-thumbnail/theme-thumbnail.component\";\nimport {RouterModule} from \"@angular/router\";\nimport {AngularMaterialModule} from \"../../../shared/angular-material.module\";\nimport {FormsModule} from \"@angular/forms\";\nimport {ThemeService} from \"./theme.service\";\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    ThemeThumbnailComponent,\n    MenuComponent,\n    SubMenuComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule,\n    AngularMaterialModule,\n    FormsModule\n  ],\n  exports: [\n    LayoutComponent,\n    MenuComponent,\n    SubMenuComponent\n  ],\n  providers: []\n})\nexport class ThemeControllerModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "MenuComponent"
                        },
                        {
                            "name": "SubMenuComponent"
                        },
                        {
                            "name": "ThemeThumbnailComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AngularMaterialModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LayoutComponent"
                        },
                        {
                            "name": "MenuComponent"
                        },
                        {
                            "name": "SubMenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-controller/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-controller/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-controller/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/main/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/theme-controller/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/main/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/theme-controller/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-controller/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-controller/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/main/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/main/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/main/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "projects/theme-controller/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-controller/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "projects/theme-controller/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/theme-controller/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "projects/main/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/app/widget/widget.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WidgetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/main/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/layout/layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ThemeThumbnailComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Accent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Font",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Palette",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ThemeModel",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/layout/theme-thumbnail/theme-thumbnail.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Warn",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/layout/theme-thumbnail/theme.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Theme",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/menu/IMenuItem.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/menu/sub-menu/sub-menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SubMenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/app/theme.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ThemeService",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/theme-controller/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/main/main.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MainComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}